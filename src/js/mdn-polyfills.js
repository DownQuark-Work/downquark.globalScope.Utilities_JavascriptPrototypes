// By default all polyfills are called

const arrayFill = require('mdn-polyfills/Array.prototype.fill')
const arrayFilter = require('mdn-polyfills/Array.prototype.filter')
const arrayFind = require('mdn-polyfills/Array.prototype.find')
const arrayFindIndex = require('mdn-polyfills/Array.prototype.findIndex')
const arrayForEach = require('mdn-polyfills/Array.prototype.forEach')
const arrayFrom = require('mdn-polyfills/Array.from')
const arrayIncludes = require('mdn-polyfills/Array.prototype.includes')
const arrayOf = require('mdn-polyfills/Array.of')
const arrayReduce = require('mdn-polyfills/Array.prototype.reduce')
const arraySome = require('mdn-polyfills/Array.prototype.some')
// const customEvent = require('mdn-polyfills/CustomEvent')
// const elementClassList = require('mdn-polyfills/Element.prototype.classList')
// const elementClosest = require('mdn-polyfills/Element.prototype.closest')
// const elementGetAttributeNames = require('mdn-polyfills/Element.prototype.getAttributeNames')
// const elementMatches = require('mdn-polyfills/Element.prototype.matches')
// const elementToggleAttribute = require('mdn-polyfills/Element.prototype.toggleAttribute')
// const functionBind = require('mdn-polyfills/Function.prototype.bind')
// const hTMLCanvasElementToBlob = require('mdn-polyfills/HTMLCanvasElement.prototype.toBlob')
// const mouseEvent = require('mdn-polyfills/MouseEvent')
// const nodeAddEventListener = require('mdn-polyfills/Node.prototype.addEventListener')
// const nodeAfter = require('mdn-polyfills/Node.prototype.after')
// const nodeAppend = require('mdn-polyfills/Node.prototype.append')
// const nodeBefore = require('mdn-polyfills/Node.prototype.before')
// const nodeChildren = require('mdn-polyfills/Node.prototype.children')
// const nodeFirstElementChild = require('mdn-polyfills/Node.prototype.firstElementChild')
// const nodeListForEach = require('mdn-polyfills/NodeList.prototype.forEach')
// const nodePrepend = require('mdn-polyfills/Node.prototype.prepend')
// const nodeRemove = require('mdn-polyfills/Node.prototype.remove')
// const nodeReplaceWith = require('mdn-polyfills/Node.prototype.replaceWith')
// const numberIsInteger = require('mdn-polyfills/Number.isInteger')
// const numberIsNaN = require('mdn-polyfills/Number.isNaN')
// const objectAssign = require('mdn-polyfills/Object.assign')
// const objectCreate = require('mdn-polyfills/Object.create')
// const objectEntries = require('mdn-polyfills/Object.entries')
// const objectKeys = require('mdn-polyfills/Object.keys')
// const objectValues = require('mdn-polyfills/Object.values')
// const stringEndsWith = require('mdn-polyfills/String.prototype.endsWith')
// const stringIncludes = require('mdn-polyfills/String.prototype.includes')
// const stringPadEnd = require('mdn-polyfills/String.prototype.padEnd')
// const stringPadStart = require('mdn-polyfills/String.prototype.padStart')
// const stringRepeat = require('mdn-polyfills/String.prototype.repeat')
// const stringStartsWith = require('mdn-polyfills/String.prototype.startsWith')
// const stringTrim = require('mdn-polyfills/String.prototype.trim')

const Proto = () =>
{ console.log('polyfills loaded')
 // defaults
  arrayFill()
  arrayFilter()
  arrayFind()
  arrayFindIndex()
  arrayForEach()
  arrayFrom()
  arrayIncludes()
  arrayOf()
  arrayReduce()
  arraySome()
  // customEvent()
  // elementClassList()
  // elementClosest()
  // elementGetAttributeNames()
  // elementMatches()
  // elementToggleAttribute()
  // functionBind()
  // hTMLCanvasElementToBlob()
  // mouseEvent()
  // nodeAddEventListener()
  // nodeAfter()
  // nodeAppend()
  // nodeBefore()
  // nodeChildren()
  // nodeFirstElementChild()
  // nodeListForEach()
  // nodePrepend()
  // nodeRemove()
  // nodeReplaceWith()
  // numberIsInteger()
  // numberIsNaN()
  // objectAssign()
  // objectCreate()
  // objectEntries()
  // objectKeys()
  // objectValues()
  // stringEndsWith()
  // stringIncludes()
  // stringPadEnd()
  // stringPadStart()
  // stringRepeat()
  // stringStartsWith()
  // stringTrim()
  return true;
}

exports.Defaults = Proto
exports.include = {arrayFill, arrayFilter, arrayFind, arrayFindIndex, arrayForEach, arrayFrom, arrayIncludes, arrayOf, arrayReduce, arraySome,}
// exports.include = { arrayFill, arrayFilter, arrayFind, arrayFindIndex, arrayForEach, arrayFrom, arrayIncludes, arrayOf, arrayReduce, arraySome, customEvent, elementClassList, elementClosest, elementGetAttributeNames, elementMatches, elementToggleAttribute, functionBind, hTMLCanvasElementToBlob, mouseEvent, nodeAddEventListener, nodeAfter, nodeAppend, nodeBefore, nodeChildren, nodeFirstElementChild, nodeListForEach, nodePrepend, nodeRemove, nodeReplaceWith, numberIsInteger, numberIsNaN, objectAssign, objectCreate, objectEntries, objectKeys, objectValues, stringEndsWith, stringIncludes, stringPadEnd, stringPadStart, stringRepeat, stringStartsWith, stringTrim, }
