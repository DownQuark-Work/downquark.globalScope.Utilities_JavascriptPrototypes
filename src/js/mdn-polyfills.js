// By default all polyfills are called

const arrayFill = require('./mdn-polyfills/Array.prototype.fill/index.js')
const arrayFilter = require('./mdn-polyfills/Array.prototype.filter/index.js')
const arrayFind = require('./mdn-polyfills/Array.prototype.find/index.js')
const arrayFindIndex = require('./mdn-polyfills/Array.prototype.findIndex/index.js')
const arrayForEach = require('./mdn-polyfills/Array.prototype.forEach/index.js')
const arrayFrom = require('./mdn-polyfills/Array.from/index.js')
const arrayIncludes = require('./mdn-polyfills/Array.prototype.includes/index.js')
const arrayOf = require('./mdn-polyfills/Array.of/index.js')
const arrayReduce = require('./mdn-polyfills/Array.prototype.reduce/index.js')
const arraySome = require('./mdn-polyfills/Array.prototype.some/index.js')
const customEvent = require('./mdn-polyfills/CustomEvent/index.js')
const elementClassList = require('./mdn-polyfills/Element.prototype.classList/index.js')
const elementClosest = require('./mdn-polyfills/Element.prototype.closest/index.js')
const elementGetAttributeNames = require('./mdn-polyfills/Element.prototype.getAttributeNames/index.js')
const elementMatches = require('./mdn-polyfills/Element.prototype.matches/index.js')
const elementToggleAttribute = require('./mdn-polyfills/Element.prototype.toggleAttribute/index.js')
const functionBind = require('./mdn-polyfills/Function.prototype.bind/index.js')
const hTMLCanvasElementToBlob = require('./mdn-polyfills/HTMLCanvasElement.prototype.toBlob/index.js')
const mouseEvent = require('./mdn-polyfills/MouseEvent/index.js')
const nodeAddEventListener = require('./mdn-polyfills/Node.prototype.addEventListener/index.js')
const nodeAfter = require('./mdn-polyfills/Node.prototype.after/index.js')
const nodeAppend = require('./mdn-polyfills/Node.prototype.append/index.js')
const nodeBefore = require('./mdn-polyfills/Node.prototype.before/index.js')
const nodeChildren = require('./mdn-polyfills/Node.prototype.children/index.js')
const nodeFirstElementChild = require('./mdn-polyfills/Node.prototype.firstElementChild/index.js')
const nodeListForEach = require('./mdn-polyfills/NodeList.prototype.forEach/index.js')
const nodePrepend = require('./mdn-polyfills/Node.prototype.prepend/index.js')
const nodeRemove = require('./mdn-polyfills/Node.prototype.remove/index.js')
const nodeReplaceWith = require('./mdn-polyfills/Node.prototype.replaceWith/index.js')
const numberIsInteger = require('./mdn-polyfills/Number.isInteger/index.js')
const numberIsNaN = require('./mdn-polyfills/Number.isNaN/index.js')
const objectAssign = require('./mdn-polyfills/Object.assign/index.js')
const objectCreate = require('./mdn-polyfills/Object.create/index.js')
const objectEntries = require('./mdn-polyfills/Object.entries/index.js')
const objectKeys = require('./mdn-polyfills/Object.keys/index.js')
const objectValues = require('./mdn-polyfills/Object.values/index.js')
const stringEndsWith = require('./mdn-polyfills/String.prototype.endsWith/index.js')
const stringIncludes = require('./mdn-polyfills/String.prototype.includes/index.js')
const stringPadEnd = require('./mdn-polyfills/String.prototype.padEnd/index.js')
const stringPadStart = require('./mdn-polyfills/String.prototype.padStart/index.js')
const stringRepeat = require('./mdn-polyfills/String.prototype.repeat/index.js')
const stringStartsWith = require('./mdn-polyfills/String.prototype.startsWith/index.js')
const stringTrim = require('./mdn-polyfills/String.prototype.trim/index.js')

const Proto = () =>
{ // defaults
  arrayFill()
  arrayFilter()
  arrayFind()
  arrayFindIndex()
  arrayForEach()
  arrayFrom()
  arrayIncludes()
  arrayOf()
  arrayReduce()
  arraySome()
  customEvent()
  elementClassList()
  elementClosest()
  elementGetAttributeNames()
  elementMatches()
  elementToggleAttribute()
  functionBind()
  hTMLCanvasElementToBlob()
  mouseEvent()
  nodeAddEventListener()
  nodeAfter()
  nodeAppend()
  nodeBefore()
  nodeChildren()
  nodeFirstElementChild()
  nodeListForEach()
  nodePrepend()
  nodeRemove()
  nodeReplaceWith()
  numberIsInteger()
  numberIsNaN()
  objectAssign()
  objectCreate()
  objectEntries()
  objectKeys()
  objectValues()
  stringEndsWith()
  stringIncludes()
  stringPadEnd()
  stringPadStart()
  stringRepeat()
  stringStartsWith()
  stringTrim()
  return true;
}

exports.Defaults = Proto
exports.include = { arrayFill, arrayFilter, arrayFind, arrayFindIndex, arrayForEach, arrayFrom, arrayIncludes, arrayOf, arrayReduce, arraySome, customEvent, elementClassList, elementClosest, elementGetAttributeNames, elementMatches, elementToggleAttribute, functionBind, hTMLCanvasElementToBlob, mouseEvent, nodeAddEventListener, nodeAfter, nodeAppend, nodeBefore, nodeChildren, nodeFirstElementChild, nodeListForEach, nodePrepend, nodeRemove, nodeReplaceWith, numberIsInteger, numberIsNaN, objectAssign, objectCreate, objectEntries, objectKeys, objectValues, stringEndsWith, stringIncludes, stringPadEnd, stringPadStart, stringRepeat, stringStartsWith, stringTrim, }